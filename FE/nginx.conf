server {
    listen 80;
    server_name j12e103.p.ssafy.io;

    # HTTP에서 HTTPS로 리다이렉트
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name j12e103.p.ssafy.io;

    # SSL 인증서와 키 설정
    ssl_certificate /etc/letsencrypt/live/j12e103.p.ssafy.io-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/j12e103.p.ssafy.io-0001/privkey.pem;

    # SSL 설정 (권장)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_prefer_server_ciphers off;

    # 업로드 용량 제한 설정 (100MB)
    client_max_body_size 100M;

    # 리소스 루트 설정
    root /usr/share/nginx/html;  # 정적 파일 경로 (Next.js 빌드 결과물)
    index index.html;

    # 기본 페이지 설정
    location / {
        try_files $uri $uri/ /index.html;  # Next.js의 SPA 처리
    }

    # 필요한 파일들에 대한 접근을 설정 (예: /_next)
    location /_next/ {
        try_files $uri $uri/ =404;
    }

    # 필요한 파일들에 대한 접근을 설정 (예: /static)
    location /static/ {
        try_files $uri $uri/ =404;
    }

    location /api/ {
            proxy_pass http://backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS 문제 해결 (필요 시 추가)
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';

            # OPTIONS 요청 처리 (CORS Preflight)
            if ($request_method = OPTIONS) {
                return 204;
            }
    }


    # WebSocket 연결을 위한 설정 (Mosquitto WebSocket 포트)
    location /ws/ {
            # SSL 처리 후 내부 ws:// 프로토콜로 전달
            proxy_pass http://mosquitto:8083;  # 내부 WebSocket 서버로 전달 (wss:// -> ws://)

            # WebSocket 헤더 설정
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
    }

        # MQTT (mqtts:// -> mqtt://) 설정
    location /mqtt/ {
            proxy_pass http://mosquitto:1883;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
    }
}
